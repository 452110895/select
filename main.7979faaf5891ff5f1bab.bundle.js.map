{"version":3,"file":"main.7979faaf5891ff5f1bab.bundle.js","sources":["webpack:///./README.md"],"sourcesContent":["module.exports = \"# rc-select\\n---\\n\\nReact Select\\n\\n[![NPM version][npm-image]][npm-url]\\n[![build status][travis-image]][travis-url]\\n[![Test coverage][coveralls-image]][coveralls-url]\\n[![Dependencies](https://img.shields.io/david/react-component/select.svg?style=flat-square)](https://david-dm.org/react-component/select)\\n[![DevDependencies](https://img.shields.io/david/dev/react-component/select.svg?style=flat-square)](https://david-dm.org/react-component/select?type=dev)\\n[![npm download][download-image]][download-url]\\n[![Storybook](https://gw.alipayobjects.com/mdn/ob_info/afts/img/A*CQXNTZfK1vwAAAAAAAAAAABjAQAAAQ/original)](https://github.com/react-component/select)\\n\\n[Storybook]: https://github.com/storybooks/press/blob/master/badges/storybook.svg\\n[npm-image]: http://img.shields.io/npm/v/rc-select.svg?style=flat-square\\n[npm-url]: http://npmjs.org/package/rc-select\\n[travis-image]: https://img.shields.io/travis/react-component/select.svg?style=flat-square\\n[travis-url]: https://travis-ci.org/react-component/select\\n[coveralls-image]: https://img.shields.io/coveralls/react-component/select.svg?style=flat-square\\n[coveralls-url]: https://coveralls.io/r/react-component/select?branch=maste\\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\\n[node-url]: http://nodejs.org/download/\\n[download-image]: https://img.shields.io/npm/dm/rc-select.svg?style=flat-square\\n[download-url]: https://npmjs.org/package/rc-select\\n\\n## Screenshots\\n\\n<img src=\\\"https://gw.alipayobjects.com/zos/antfincdn/d13eUZlgdJ/tupian.png\\\" />\\n\\n## Feature\\n\\n* support ie9,ie9+,chrome,firefox,safari\\n\\n### Keyboard\\n\\n* Open select (focus input || focus and click)\\n* KeyDown/KeyUp/Enter to navigate menu\\n\\n## install\\n\\n[![rc-select](https://nodei.co/npm/rc-select.png)](https://npmjs.org/package/rc-select)\\n\\n## Usage\\n\\n### basic use\\n\\n```js\\nimport Select, {Option, OptGroup} from 'rc-select';\\n\\nvar c = (\\n  <Select>\\n    <Option value=\\\"jack\\\">jack</Option>\\n    <Option value=\\\"lucy\\\">lucy</Option>\\n    <Option value=\\\"yiminghe\\\">yiminghe</Option>\\n  </Select>\\n);\\nReact.render(c, container);\\n```\\n\\n## API\\n\\n### Select props\\n\\n| name     | description    | type     | default      |\\n|----------|----------------|----------|--------------|\\n|id | html id to set on the component wrapper | String | '' |\\n|className | additional css class of root dom node | String | '' |\\n|data-\\\\* | html data attributes to set on the component wrapper | String | '' |\\n|prefixCls | prefix class | String | '' |\\n|animation | dropdown animation name. only support slide-up now | String | '' |\\n|transitionName | dropdown css animation name | String | '' |\\n|choiceTransitionName | css animation name for selected items at multiple mode | String | '' |\\n|dropdownMatchSelectWidth | whether dropdown's with is same with select | bool | true |\\n|dropdownClassName | additional className applied to dropdown | String | - |\\n|dropdownStyle | additional style applied to dropdown | Object | {} |\\n|dropdownAlign | additional align applied to dropdown | Object | {} |\\n|dropdownMenuStyle | additional style applied to dropdown menu | Object | {} |\\n|notFoundContent | specify content to show when no result matches. | String | 'Not Found' |\\n|tokenSeparators | separator used to tokenize on tag/multiple mode | string[]? |  |\\n|open | control select open | bool | |\\n|defaultOpen | control select default open | bool | |\\n|placeholder | select placeholder | React Node | |\\n|showSearch | whether show search input in single mode | bool | true |\\n|showArrow | whether show arrow | bool | true (single mode), false (multiple mode) |\\n|allowClear | whether allowClear | bool | false |\\n|tags | when tagging is enabled the user can select from pre-existing options or create a new tag by picking the first choice, which is what the user has typed into the search box so far. | bool | false |\\n|maxTagTextLength | max tag text length to show | number | - |\\n|maxTagCount | max tag count to show | number | - |\\n|maxTagPlaceholder | placeholder for omitted values | ReactNode/function(omittedValues) | - |\\n|combobox | enable combobox mode(can not set multiple at the same time) | bool | false |\\n|multiple | whether multiple select | bool | false |\\n|disabled | whether disabled select | bool | false |\\n|filterOption | whether filter options by input value. default filter by option's optionFilterProp prop's value | bool | true/Function(inputValue:string, option:Option) |\\n|optionFilterProp | which prop value of option will be used for filter if filterOption is true | String | 'value' |\\n|optionLabelProp | render option value or option children as content of select | String: 'value'/'children' | 'value' |\\n|defaultValue | initial selected option(s) | String/Array<String> | - |\\n|value | current selected option(s) | String/Array<String>/{key:String, label:React.Node}/Array<{key, label}> | - |\\n|firstActiveValue | first active value when there is no value | String/Array<String> | - |\\n|labelInValue| whether to embed label in value, see above value type | Bool | false |\\n|backfill| whether backfill select option to search input (Only works in single and combobox mode) | Bool | false |\\n|onChange | called when select an option or input value change(combobox) | function(value, option:Option/Array<Option>) | - |\\n|onSearch | called when input changed | function | - |\\n|onBlur | called when blur | function | - |\\n|onFocus | called when focus | function | - |\\n|onPopupScroll | called when menu is scrolled | function | - |\\n|onSelect | called when a option is selected. param is option's value and option instance | Function(value, option:Option) | - |\\n|onDeselect | called when a option is deselected. param is option's value. only called for multiple or tags | Function(value, option:Option) | - |\\n|onInputKeyDown | called when key down on input | Function(event) | - |\\n|defaultActiveFirstOption | whether active first option by default | bool | true |\\n|getPopupContainer | container which popup select menu rendered into | function(trigger:Node):Node | function(){return document.body;} |\\n|getInputElement| customize input element | function(): Element | - |\\n|showAction| actions trigger the dropdown to show | String[]? | - |\\n|autoFocus| focus select after mount | Bool | - |\\n| autoClearSearchValue | auto clear search input value when multiple select is selected/deselected | boolean | true |\\n| inputIcon | specify the select arrow icon | ReactNode | - |\\n| clearIcon | specify the clear icon | ReactNode | - |\\n| removeIcon | specify the remove icon | ReactNode | - |\\n| menuItemSelectedIcon | specify the remove icon | ReactNode \\\\| (props: MenuItemProps) => ReactNode | - |\\n| dropdownRender | render custom dropdown menu | (menu: React.Node, props: MenuProps) => ReactNode | - |\\n| loading | show loading icon in arrow | Boolean | false |\\n\\n### Methods\\n\\n| name     | description    | parameters | return      |\\n|----------|----------------|----------|--------------|\\n|focus     | focus select programmably | - | - |\\n|blur     | blur select programmably | - | - |\\n\\n### Option props\\n\\n| name     | description    | type     | default      |\\n|----------|----------------|----------|--------------|\\n|className | additional class to option | String | '' |\\n|disabled | no effect for click or keydown for this item | bool | false |\\n|key | if react want you to set key, then key is same as value, you can omit value | String/number | - |\\n|value | default filter by this attribute. if react want you to set key, then key is same as value, you can omit value | String/number | - |\\n|title | if you are not satisfied with auto-generated `title` which is show while hovering on selected value, you can customize it with this property | String | - |\\n\\n\\n### OptGroup props\\n\\n| name     | description    | type     | default      |\\n|----------|----------------|----------|--------------|\\n|label | group label | String/React.Element | - |\\n|key | - | String | - |\\n|value | default filter by this attribute. if react want you to set key, then key is same as value, you can omit value | String | - |\\n\\n\\n## Development\\n\\n```\\nnpm install\\nnpm start\\n```\\n\\n## Example\\n\\nhttp://localhost:9001/\\n\\nonline example: http://react-component.github.io/select/\\n\\n## Test Case\\n\\n```\\nnpm test\\n```\\n\\n## Coverage\\n\\n```\\nnpm run coverage\\n```\\n\\n\\n## License\\n\\nrc-select is released under the MIT license.\\n\""],"mappings":"AAAA","sourceRoot":""}