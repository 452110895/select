{"version":3,"sources":["webpack:///./examples/email.js","webpack:///./~/babel-runtime/helpers/createClass.js?1dfe********"],"names":["Test","state","options","onSelect","value","console","log","onChange","indexOf","map","domain","email","setState","width","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;;IAEMA,I;;;;;;;;;;;;;;+OACJC,K,GAAQ;AACNC,eAAS;AADH,K,QAIRC,Q,GAAW,UAACC,KAAD,EAAW;AACpBC,cAAQC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACD,K,QAEDG,Q,GAAW,UAACH,KAAD,EAAW;AACpBC,cAAQC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACA,UAAIF,UAAU,EAAd;AACA,UAAIE,KAAJ,EAAW;AACT,YAAIA,MAAMI,OAAN,CAAc,GAAd,KAAsB,CAA1B,EAA6B;AAC3BN,oBAAU;AAAC,6DAAD;AAAA,cAAQ,KAAKE,KAAb;AAAqBA;AAArB,WAAV;AACD,SAFD,MAEO;AACLF,oBAAU,CAAC,WAAD,EAAc,WAAd,EAA2B,aAA3B,EAA0CO,GAA1C,CAA8C,UAACC,MAAD,EAAY;AAClE,gBAAMC,QAAWP,KAAX,SAAoBM,MAA1B;AACA,mBAAO;AAAC,+DAAD;AAAA,gBAAQ,KAAKC,KAAb;AAAqBA;AAArB,aAAP;AACD,WAHS,CAAV;AAID;AACF;AACD,YAAKC,QAAL,CAAc;AACZV;AADY,OAAd;AAGD,K;;;;;6BAEQ;AACP,aAAQ;AAAC,yDAAD;AAAA;AACN,wBADM;AAEN,2BAAiB,KAFX;AAGN,iBAAO,EAAEW,OAAO,GAAT,EAHD;AAIN,oBAAU,KAAKN,QAJT;AAKN,oBAAU,KAAKJ,QALT;AAMN,uBAAY;AANN;AAQL,aAAKF,KAAL,CAAWC;AARN,OAAR;AAUD;;;;EAtCgB,6CAAAY,CAAMC,S;;AAyCzB,iDAAAC,CAASC,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0BC,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E;;;;;;;;;;;;;;;;AChDA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,G","file":"email.js","sourcesContent":["/* eslint no-console: 0 */\n\nimport React from 'react';\nimport Select, { Option } from 'rc-select';\nimport 'rc-select/assets/index.less';\nimport ReactDOM from 'react-dom';\n\nclass Test extends React.Component {\n  state = {\n    options: [],\n  };\n\n  onSelect = (value) => {\n    console.log('onSelect', value);\n  };\n\n  onChange = (value) => {\n    console.log('onChange', value);\n    let options = [];\n    if (value) {\n      if (value.indexOf('@') >= 0) {\n        options = <Option key={value}>{value}</Option>;\n      } else {\n        options = ['gmail.com', 'yahoo.com', 'outlook.com'].map((domain) => {\n          const email = `${value}@${domain}`;\n          return <Option key={email}>{email}</Option>;\n        });\n      }\n    }\n    this.setState({\n      options,\n    });\n  };\n\n  render() {\n    return (<Select\n      combobox\n      notFoundContent={false}\n      style={{ width: 200 }}\n      onChange={this.onChange}\n      onSelect={this.onSelect}\n      placeholder=\"请输入账户名\"\n    >\n      {this.state.options}\n    </Select>);\n  }\n}\n\nReactDOM.render(<Test />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/email.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 7\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10"],"sourceRoot":""}