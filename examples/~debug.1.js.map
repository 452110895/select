{"version":3,"sources":["webpack:///./examples/~debug.1.js"],"names":["UserRemoteSelect","props","state","data","value","fetching","fetchUser","console","log","lastFetchId","fetchId","setState","map","user","index","text","shift","handleChange","render","width","d","React","Component","ReactDOM","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;;IAGMA,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,8GACjB,4BAAMA,KAAN,CADiB;;AAAA,UAKnBC,KALmB,GAKX;AACNC,YAAM,EADA;AAENC,aAAO,EAFD;AAGNC,gBAAU;AAHJ,KALW;;AAAA,UAWnBC,SAXmB,GAWP,UAACF,KAAD,EAAW;AACrBG,cAAQC,GAAR,CAAY,gBAAZ,EAA8BJ,KAA9B;AACA,YAAKK,WAAL,IAAoB,CAApB;AACA,UAAMC,UAAU,MAAKD,WAArB;AACA,YAAKE,QAAL,CAAc,EAAER,MAAM,EAAR,EAAYE,UAAU,IAAtB,EAAd;;AAGA,UAAMF,OAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAcS,GAAd,CAAkB,UAACC,IAAD,EAAMC,KAAN;AAAA,eAAiB;AAC9CC,gBAASD,KAAT,UAD8C;AAE9CV,sBAAUU;AAFoC,SAAjB;AAAA,OAAlB,CAAb;AAIA;AACA,UAAI,CAACV,KAAL,EAAY;AACVD,aAAKa,KAAL;AACD;AACD,YAAKL,QAAL,CAAc,EAAER,UAAF,EAAQE,UAAU,KAAlB,EAAd;AACD,KA3BkB;;AAAA,UA6BnBY,YA7BmB,GA6BJ,UAACb,KAAD,EAAW;AACxBG,cAAQC,GAAR,CAAY,UAAZ,EAAwBJ,KAAxB;AACA,YAAKO,QAAL,CAAc;AACZP,oBADY;AAEZD,cAAM,EAFM;AAGZE,kBAAU;AAHE,OAAd;AAKD,KApCkB;;AAEjB,UAAKI,WAAL,GAAmB,CAAnB;AAFiB;AAGlB;;6BAmCDS,M,qBAAS;AAAA,iBAC2B,KAAKhB,KADhC;AAAA,QACCG,QADD,UACCA,QADD;AAAA,QACWF,IADX,UACWA,IADX;AAAA,QACiBC,KADjB,UACiBA,KADjB;;AAEP,WACE;AAAC,uDAAD;AAAA;AACE,wBADF;AAEE,0BAFF;AAGE,eAAOA,KAHT;AAIE,qBAAY,cAJd;AAKE,0BAAiB,UALnB;AAME,yBAAiBC,WAAW,4DAAC,IAAD,IAAM,MAAK,OAAX,GAAX,GAAmC,IANtD;AAOE,kBAAU,KAAKC,SAPjB;AAQE,kBAAU,KAAKW,YARjB;AASE,eAAO,EAAEE,OAAO,MAAT;AATT;AAWGhB,WAAKS,GAAL,CAAS;AAAA,eAAK;AAAC,2DAAD;AAAA,YAAQ,KAAKQ,EAAEhB,KAAf;AAAuBgB,YAAEL;AAAzB,SAAL;AAAA,OAAT;AAXH,KADF;AAeD,G;;;EAxD4BM,6CAAKA,CAACC,S;;AA2DrCC,iDAAQA,CAACL,MAAT,CAAgB,4DAAC,gBAAD,OAAhB,EAAsCM,SAASC,cAAT,CAAwB,iBAAxB,CAAtC;;AAEA,mB","file":"examples/~debug.1.js","sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\nimport Select, { Option } from 'rc-select';\nimport 'rc-select/assets/index.less';\nimport ReactDOM from 'react-dom';\n\n\nclass UserRemoteSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.lastFetchId = 0;\n  }\n\n  state = {\n    data: [],\n    value: [],\n    fetching: false,\n  }\n\n  fetchUser = (value) => {\n    console.log('fetching user1', value);\n    this.lastFetchId += 1;\n    const fetchId = this.lastFetchId;\n    this.setState({ data: [], fetching: true });\n\n   \n    const data = [1,2,3,4,5,6].map((user,index) => ({\n      text: `${index}label`,\n      value: `${index}`,\n    }));\n    // 模拟：选中的时候，目标数据不在结果集中\n    if (!value) {\n      data.shift()\n    }\n    this.setState({ data, fetching: false });\n  }\n\n  handleChange = (value) => {\n    console.log('onchange', value)\n    this.setState({\n      value,\n      data: [],\n      fetching: false,\n    });\n  }\n\n  render() {\n    const { fetching, data, value } = this.state;\n    return (\n      <Select\n        showSearch\n        labelInValue\n        value={value}\n        placeholder=\"Select users\"\n        optionFilterProp=\"children\"\n        notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n        onSearch={this.fetchUser}\n        onChange={this.handleChange}\n        style={{ width: '100%' }}\n      >\n        {data.map(d => <Option key={d.value}>{d.text}</Option>)}\n      </Select>\n    );\n  }\n}\n\nReactDOM.render(<UserRemoteSelect />, document.getElementById('__react-content'));\n\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./examples/~debug.1.js"],"sourceRoot":""}